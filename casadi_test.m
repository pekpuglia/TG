addpath('casadi/')
import casadi.*
%% test correct integration
f = @(x) [-x(2); x(1)];
RK8(f, [1; 0], pi/2)
%% test if RK8 works with casadi
f = @(X) [
    X(4:6);
    -9.86960440108936*X(1:3) / (X(1:3)' * X(1:3)) ^ (3/2)];
x = SX.sym('x', 6);
RK8(f, x, 1.0)
%% test if solving a problem is feasible with casadi
%check why this is different to JuMP's Hohmann
%scaled with
% L = 8.0e6
% T = 3560.5407901289027
% MUPRIME = 9.86960440108936

%lambert
N = 200;
tabX = SX.sym('tab_X', 6, N);

dVmags = SX.sym('dVmags', 2);
dVdirs = SX.sym('dVdirs', 3, 2);

X1 = [
     0.875
     0.0
     0.0
     0.0
     2.113574935284018
     2.610047677705989
 ];

X2 = [
 -1.125
  8.670321028545121e-17
  1.0706954784396431e-16
 -3.6273082461346874e-16
 -1.8639978853536492
 -2.3018456884105705
];

tf = 1;
%%
tab_variables = [
    reshape(tabX, 6*N, 1)
    dVmags
    reshape(dVdirs, 3*2, 1)];

planner = init_planner(tab_variables, 6, N);

% add bounds & constraints
planner = add_bounds(planner, dVmags(1), 0, Inf);
planner = add_bounds(planner, dVmags(2), 0, Inf);

planner = add_equality(planner, dVdirs(:, 1)' * dVdirs(:, 1), 1);
planner = add_equality(planner, dVdirs(:, 2)' * dVdirs(:, 2), 1);

%boundary conditions
planner = add_equality(planner, tabX(1:3, 1), X1(1:3));
planner = add_equality(planner, tabX(4:6, 1) - dVmags(1)*dVdirs(:, 1), X1(4:6));
planner = add_equality(planner, tabX(1:3, end), X2(1:3));
planner = add_equality(planner, tabX(4:6, end) + dVmags(2)*dVdirs(:, 2), X2(4:6));

%integration
for i = 1:(N-1)
    planner = add_equality(planner, tabX(:, i+1) - RK8(f, tabX(:, i), tf/(N-1)), zeros(6,1));
end

planner.prob.f = sum(dVmags);
%% x0
dVmags0 = [0; 0];
dVdirs0 = [X1(4:6)/vecnorm(X1(4:6)) X2(4:6)/vecnorm(X2(4:6))];
%integrate motion along initial orbit?
tabX0 = repmat(X1, 1, N);

for i = 2:N
    tabX0(:, i) = RK8(f, tabX0(:, i-1), tf/(N-1));
end

tab0 = [
    reshape(tabX0, 6*N, 1)
    dVmags0
    reshape(dVdirs0, 3*2, 1)
];
%%
[sol, solvetime] = solve_planner(planner, tab0, struct);
%%
solved_X = reshape(full(sol.x(1:(6*N))), 6, N);
solved_dVmags = full(sol.x((6*N+1):(6*N+2)));
solved_dVdirs = reshape(full(sol.x((end-5):end)), 3, 2);
cost = sol.f
%%
function Xnext = RK8(f, X, dt)
    a = zeros(16);
    a(2,1) =  .4e-1;

    a(3,1) = -.198852731918229097650241511466089129345e-1;
    a(3,2) =  .1163726333296965222173745449432724803716;

    a(4,1) =  .3618276005170260466963139767374883778890e-1;
    a(4,2) =  0;
    a(4,3) =  .1085482801551078140088941930212465133667;

    a(5,1) =  2.272114264290177409193144938921415409241;
    a(5,2) =  0;
    a(5,3) = -8.526886447976398578316416192982602292786;
    a(5,4) =  6.830772183686221169123271254061186883545;

    a(6,1) =  .5094385535389374394512668566783434123978e-1;
    a(6,2) =  0;
    a(6,3) =  0;
    a(6,4) =  .1755865049809071110203693328749561646990;
    a(6,5) =  .70229612707574674987780067603244497535e-3;

    a(7,1) =  .1424783668683284782770955365543878809824;
    a(7,2) =  0;
    a(7,3) =  0;
    a(7,4) = -.3541799434668684104094753917518523845155;
    a(7,5) =  .7595315450295100889001534202778550159932e-1;
    a(7,6) =  .6765157656337123215269906939508560510196;

    a(8,1) =  .7111111111111111111111111111111111111111e-1;
    a(8,2) =  0;
    a(8,3) =  0;
    a(8,4) =  0;
    a(8,5) =  0;
    a(8,6) =  .3279909287605898328568406057725491803016;
    a(8,7) =  .2408979601282990560320482831163397085872;

    a(9,1) =  .7125e-1;
    a(9,2) =  0;
    a(9,3) =  0;
    a(9,4) =  0;
    a(9,5) =  0;
    a(9,6) =  .3268842451575245554847578757216915662785;
    a(9,7) =  .1156157548424754445152421242783084337215;
    a(9,8) = -.3375e-1;

    a(10,1) =  .4822677322465810178387112087673611111111e-1;
    a(10,2) =  0;
    a(10,3) =  0;
    a(10,4) =  0;
    a(10,5) =  0;
    a(10,6) =  .3948559980495400110769549704186108167677e-1;
    a(10,7) =  .1058851161934658144373823566907778072121;
    a(10,8) = -.2152006320474309346664428710937500000000e-1;
    a(10,9) = -.1045374260183348238623046875000000000000;

    a(11,1) = -.2609113435754923412210928689962011065179e-1;
    a(11,2) =  0;
    a(11,3) =  0;
    a(11,4) =  0;
    a(11,5) =  0;
    a(11,6) =  .3333333333333333333333333333333333333333e-1;
    a(11,7) = -.1652504006638105086724681598195267241410;
    a(11,8) =  .3434664118368616658319419895678838776647e-1;
    a(11,9) =  .1595758283215209043195814910843067811951;
    a(11,10) =  .2140857321828193385584684233447183324979;

    a(12,1) = -.362842339625565859076509979091267105528e-1;
    a(12,2) =  0;
    a(12,3) =  0;
    a(12,4) =  0;
    a(12,5) =  0;
    a(12,6) = -1.096167597427208807028761474420297770752;
    a(12,7) =  .1826035504321331052308236240517254331348;
    a(12,8) =  .708225444417068325613028685455625123741e-1;
    a(12,9) = -.231364701848243126999929738482630407146e-1;
    a(12,10) =  .2711204726320932916455631550463654973432;
    a(12,11) =  1.308133749422980744437146904349994472286;

    a(13,1) = -.5074635056416974879347823927726392374259;
    a(13,2) =  0;
    a(13,3) =  0;
    a(13,4) =  0;
    a(13,5) =  0;
    a(13,6) = -6.631342198657237090355284142048733580937;
    a(13,7) = -.252748010090880105270020973014860316405;
    a(13,8) = -.4952612380036095562991116175550167835424;
    a(13,9) =  .293252554525388690285739720360003594753;
    a(13,10) =  1.440108693768280908474851998204423941413;
    a(13,11) =  6.237934498647055877243623886838802127716;
    a(13,12) =  .7270192054526987638549835199880202544289;

    a(14,1) =  .6130118256955931701496387847232542148725;
    a(14,2) =  0;
    a(14,3) =  0;
    a(14,4) =  0;
    a(14,5) =  0;
    a(14,6) =  9.088803891640463313341034206647776279557;
    a(14,7) = -.407378815629344868103315381138325162923;
    a(14,8) =  1.790733389490374687043894756399015035977;
    a(14,9) =  .714927166761755073724875250629602731782;
    a(14,10) = -1.438580857841722850237810322456327208949;
    a(14,11) = -8.263329312064740580595954649844133476994;
    a(14,12) = -1.537570570808865115231450725068826856201;
    a(14,13) =  .3453832827564871699090880801079644428793;

    a(15,1) = -1.211697910343873872490625222495537087293;
    a(15,2) =  0;
    a(15,3) =  0;
    a(15,4) =  0;
    a(15,5) =  0;
    a(15,6) = -19.05581871559595277753334676575234493500;
    a(15,7) =  1.26306067538987510135943101851905310045;
    a(15,8) = -6.913916969178458046793476128409110926069;
    a(15,9) = -.676462266509498065300115641383621209887;
    a(15,10) =  3.367860445026607887090352785684064242560;
    a(15,11) =  18.00675164312590810020103216906571965203;
    a(15,12) =  6.838828926794279896350389904990814350968;
    a(15,13) = -1.031516451921950498420447675652291096155;
    a(15,14) =  .4129106232130622755368055554332539084021;

    a(16,1) =  2.157389007494053627033175177985666660692;
    a(16,2) =  0;
    a(16,3) =  0;
    a(16,4) =  0;
    a(16,5) =  0;
    a(16,6) =  23.80712219809580523172312179815279712750;
    a(16,7) =  .88627792492165554903036801415266308369;
    a(16,8) =  13.13913039759876381480201677314222971522;
    a(16,9) = -2.604415709287714883747369630937415176632;
    a(16,10) = -5.193859949783872300189266203049579105962;
    a(16,11) = -20.41234071154150778768154893536134356354;
    a(16,12) = -12.30085625250572261314889445241581039623;
    a(16,13) =  1.521553095008539362178397458330791655267;
    a(16,14) =  0;
    a(16,15) =  0;

    b = zeros(16,1);
    b(1) =  .1458885278405539719101539582255752917034e-1;
    b(2) =  0;
    b(3) =  0;
    b(4) =  0;
    b(5) =  0;
    b(6) =  0;
    b(7) =  0;
    b(8) =  .2024197887889332650566666683195656097825e-2;
    b(9) =  .2178047084569716646796256135839225745895;
    b(10) =  .1274895340854389692868677968654808668201;
    b(11) =  .2244617745463131861258531547137348031621;
    b(12) =  .1787254491259903095100090833796054447157;
    b(13) =  .7594344758096557172908303416513173076283e-1;
    b(14) =  .1294845879197561516869001434704642286297;
    b(15) =  .2947744761261941714007911131590716605202e-1;
    b(16) =  0;

    F = {zeros(length(X), 1)};

    for i = 1:16
        %compute increment in Y
        dY = a(i, 1) * F{1};
        for j = 2:(i-1)
            if a(i, j) ~= 0
                dY = dY + a(i, j) * F{j};
            end
        end
        Y = X + dt * dY;
        F{i} = f(Y);
    end

    %increment in X
    dX = zeros(length(X), 1);
    for i = 1:16
        if b(i) ~= 0
            dX = dX + b(i) * F{i};
        end
    end

    Xnext = X + dt*dX;
end